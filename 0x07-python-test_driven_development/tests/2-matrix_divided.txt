==========================================================================

        Test cases for matrix_divided Function in 2-matrix_divided.py

==========================================================================

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> docstring = __import__('2-matrix_divided').__doc__

>>> len(docstring) > 0
True

>>> docstring = __import__('2-matrix_divided').matrix_divided.__doc__

>>> len(docstring) > 0
True

>>> matrix = [[1, 2, 3], [4, 5, 6]]

>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]

>>> print(matrix_divided("string not list", 5))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([[1, 2, 3], 'string'], 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([[1, 2, 3], (4, 5, 6)], 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided(([1, 2, 3], [4, 5, 6]), 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([[1.1, -2.2, 3.3], [4.4, 5.5, -6.6]], 3))
[[0.37, -0.73, 1.1], [1.47, 1.83, -2.2]]

>>> print(matrix_divided([[1.1, -2.2, 3], [4, 5.5, -6]], 3))
[[0.37, -0.73, 1.0], [1.33, 1.83, -2.0]]

>>> print(matrix_divided([[1, 2, 3], [4, 5]], 3))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> print(matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 2.67, 3.0]]

>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> print(matrix_divided([[1, 2, 3], [1, 2, 3]], "string, string2"))
Traceback (most recent call last):
...
TypeError: div must be a number

>>> print(matrix_divided([[1, 2, 3], [1, 2, 3]], None))
Traceback (most recent call last):
...
TypeError: div must be a number

>>> print(matrix_divided([[[1, 2], 3], [4, 5]], 6))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([], 5))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([[]], 5))
[[]]

>>> print(matrix_divided(None, 5))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> print(matrix_divided([1, 2, 3], 5))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
