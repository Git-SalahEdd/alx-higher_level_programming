>>> doc = __import__("7-base_geometry").__doc__
>>> len(doc) > 0
True
>>> doc = __import__("7-base_geometry").BaseGeometry.__doc__
>>> len(doc) > 0
True
>>> doc = __import__("7-base_geometry").BaseGeometry.area.__doc__
>>> len(doc) > 0
True
>>> doc = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
>>> len(doc) > 0
True
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 5)
>>> bg.integer_validator("name")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("name", 1.5)
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", "YOLO")
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", "5")
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", [5])
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", [5, 8])
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", -5.5)
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("name", -5)
Traceback (most recent call last):
...
ValueError: name must be greater than 0
